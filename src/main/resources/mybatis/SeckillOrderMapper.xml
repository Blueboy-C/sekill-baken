<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.baken.mapper.SeckillOrderMapper">

    <!-- 定义 resultMap，用于级联查询 -->
    <resultMap id="SeckillOrderResultMap" type="org.example.baken.entity.SeckillOrder">
        <id property="id" column="id" />
        <result property="userId" column="user_id" />
        <result property="seckillActivityId" column="seckill_activity_id" />
        <result property="totalPrice" column="total_price" />
        <result property="status" column="status" />
        <result property="createTime" column="create_time" />
        <!-- 关联 SeckillActivity -->
        <association property="seckillActivity" javaType="org.example.baken.entity.SeckillActivity">
            <id property="id" column="activity_id" />
            <result property="name" column="activity_name" />
            <result property="productId" column="product_id" />
            <result property="startTime" column="start_time" />
            <result property="endTime" column="end_time" />
            <result property="stock" column="stock" />
            <result property="status" column="activity_status" />
            <!-- 关联 Product -->
            <association property="product" javaType="org.example.baken.entity.Product">
                <id property="id" column="product_id" />
                <result property="name" column="product_name" />
                <result property="description" column="product_description" />
                <result property="price" column="product_price" />
                <result property="stock" column="product_stock" />
                <result property="createTime" column="product_create_time" />
                <result property="updateTime" column="product_update_time" />
            </association>
        </association>
    </resultMap>

    <!-- 插入秒杀订单 -->
    <insert id="insertSeckillOrder" parameterType="org.example.baken.entity.SeckillOrder" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO seckill_order (user_id, seckill_activity_id, create_time, total_price, status)
        VALUES (#{userId}, #{seckillActivityId}, #{createTime}, #{totalPrice}, #{status})
    </insert>

    <!-- 根据用户ID和活动ID查询秒杀订单 -->
    <select id="selectSeckillOrderByUserAndActivity" resultMap="SeckillOrderResultMap">
        SELECT
            so.id,
            so.user_id,
            so.seckill_activity_id,
            so.create_time,
            so.total_price,
            so.status,
            sa.id AS activity_id,
            sa.name AS activity_name,
            sa.product_id,
            sa.start_time,
            sa.end_time,
            sa.stock,
            sa.status AS activity_status,
            p.id AS product_id,
            p.name AS product_name,
            p.description AS product_description,
            p.price AS product_price,
            p.stock AS product_stock,
            p.create_time AS product_create_time,
            p.update_time AS product_update_time
        FROM seckill_order so
                 LEFT JOIN seckill_activity sa ON so.seckill_activity_id = sa.id
                 LEFT JOIN product p ON sa.product_id = p.id
        WHERE so.user_id = #{userId} AND so.seckill_activity_id = #{seckillActivityId}
    </select>

    <!-- 取消订单 -->
    <update id="cancelSeckillOrder">
        UPDATE seckill_order
        SET status = 2
        WHERE id = #{orderId}
    </update>

    <!-- 支付订单 -->
    <update id="paySeckillOrder">
        UPDATE seckill_order
        SET status = 1
        WHERE id = #{orderId}
    </update>

    <!-- 根据订单ID查询订单详情 -->
    <select id="selectSeckillOrderById" resultMap="SeckillOrderResultMap">
        SELECT
            so.id,
            so.user_id,
            so.seckill_activity_id,
            so.create_time,
            so.total_price,
            so.status,
            sa.id AS activity_id,
            sa.name AS activity_name,
            sa.product_id,
            sa.start_time,
            sa.end_time,
            sa.stock,
            sa.status AS activity_status,
            p.id AS product_id,
            p.name AS product_name,
            p.description AS product_description,
            p.price AS product_price,
            p.stock AS product_stock,
            p.create_time AS product_create_time,
            p.update_time AS product_update_time
        FROM seckill_order so
                 LEFT JOIN seckill_activity sa ON so.seckill_activity_id = sa.id
                 LEFT JOIN product p ON sa.product_id = p.id
        WHERE so.id = #{orderId}
    </select>

    <!-- 根据用户ID查询订单列表（分页 + 搜索 + 过滤） -->
    <select id="selectSeckillOrdersByUserId" resultMap="SeckillOrderResultMap">
        SELECT
        so.id,
        so.user_id,
        so.seckill_activity_id,
        so.create_time,
        so.total_price,
        so.status,
        sa.id AS activity_id,
        sa.name AS activity_name,
        sa.product_id,
        sa.start_time,
        sa.end_time,
        sa.stock,
        sa.status AS activity_status,
        p.id AS product_id,
        p.name AS product_name,
        p.description AS product_description,
        p.price AS product_price,
        p.stock AS product_stock,
        p.create_time AS product_create_time,
        p.update_time AS product_update_time
        FROM seckill_order so
        LEFT JOIN seckill_activity sa ON so.seckill_activity_id = sa.id
        LEFT JOIN product p ON sa.product_id = p.id
        WHERE so.user_id = #{userId}
        <if test="search != null and search != ''">
            AND (so.id LIKE CONCAT('%', #{search}, '%') OR sa.name LIKE CONCAT('%', #{search}, '%'))
        </if>
        <if test="status != null">
            AND so.status = #{status}
        </if>
        LIMIT #{offset}, #{size}
    </select>

    <!-- 根据用户ID查询订单总数（搜索 + 过滤） -->
    <select id="countSeckillOrdersByUserId" resultType="int">
        SELECT COUNT(*)
        FROM seckill_order so
        LEFT JOIN seckill_activity sa ON so.seckill_activity_id = sa.id
        WHERE so.user_id = #{userId}
        <if test="search != null and search != ''">
            AND (so.id LIKE CONCAT('%', #{search}, '%') OR sa.name LIKE CONCAT('%', #{search}, '%'))
        </if>
        <if test="status != null">
            AND so.status = #{status}
        </if>
    </select>



    <!-- 查询订单列表（分页 + 搜索 + 过滤） -->
    <select id="selectSeckillOrdersByAdmin" resultMap="SeckillOrderResultMap">
        SELECT
        so.id,
        so.user_id,
        so.seckill_activity_id,
        so.create_time,
        so.total_price,
        so.status,
        sa.id AS activity_id,
        sa.name AS activity_name,
        sa.product_id,
        sa.start_time,
        sa.end_time,
        sa.stock,
        sa.status AS activity_status,
        p.id AS product_id,
        p.name AS product_name,
        p.description AS product_description,
        p.price AS product_price,
        p.stock AS product_stock,
        p.create_time AS product_create_time,
        p.update_time AS product_update_time
        FROM seckill_order so
        LEFT JOIN seckill_activity sa ON so.seckill_activity_id = sa.id
        LEFT JOIN product p ON sa.product_id = p.id

        <where>
            <if test="search != null and search != ''">
                AND (so.id LIKE CONCAT('%', #{search}, '%') OR sa.name LIKE CONCAT('%', #{search}, '%'))
            </if>
            <if test="status != null">
                AND so.status = #{status}
            </if>
        </where>
        LIMIT #{offset}, #{size}
    </select>

    <!-- 根据用户ID查询订单总数（搜索 + 过滤） -->
    <select id="countSeckillOrders" resultType="int">
        SELECT COUNT(*)
        FROM seckill_order so
        LEFT JOIN seckill_activity sa ON so.seckill_activity_id = sa.id
        <where>
            <if test="search != null and search != ''">
                AND (so.id LIKE CONCAT('%', #{search}, '%') OR sa.name LIKE CONCAT('%', #{search}, '%'))
            </if>
            <if test="status != null">
                AND so.status = #{status}
            </if>
        </where>
    </select>



</mapper>