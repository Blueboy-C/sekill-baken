<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.baken.mapper.UserMapper">

    <!-- 根据ID查询用户 -->
    <select id="selectUserById" resultType="org.example.baken.entity.User">
        SELECT id, username, password, email, nickname, avatar, role
        FROM user
        WHERE id = #{id}
    </select>

    <!-- 根据用户名查询用户 -->
    <select id="selectUserByUsername" resultType="org.example.baken.entity.User">
        SELECT id, username, password, email, nickname, avatar, role
        FROM user
        WHERE username = #{username}
    </select>

    <!-- 根据邮箱查询用户 -->
    <select id="selectUserByEmail" resultType="org.example.baken.entity.User">
        SELECT id, username, password, email, nickname, avatar, role
        FROM user
        WHERE email = #{email}
    </select>

    <!-- 插入用户 -->
    <insert id="insertUser" parameterType="org.example.baken.entity.User">
        INSERT INTO user (username, password, email, nickname, avatar, role)
        VALUES (#{username}, #{password}, #{email}, #{nickname}, #{avatar}, #{role})
    </insert>

    <!-- 更新用户信息 -->
    <update id="updateUser" parameterType="org.example.baken.entity.User">
        UPDATE user
        SET username = #{username},
            password = #{password},
            email = #{email},
            nickname = #{nickname},
            avatar = #{avatar},
            role = #{role}
        WHERE id = #{id}
    </update>

    <!-- 更新用户密码 -->
    <update id="updatePassword">
        UPDATE user
        SET password = #{newPassword}
        WHERE id = #{id}
    </update>

    <!-- 查询所有用户 -->
    <select id="selectAllUsers" resultType="org.example.baken.entity.User">
        SELECT id, username, password, email, nickname, avatar, role
        FROM user
    </select>

    <!-- 根据ID删除用户 -->
    <delete id="deleteUserById">
        DELETE FROM user
        WHERE id = #{id}
    </delete>



    <!-- 分页查询用户 -->
    <select id="selectUsersByPage" resultType="org.example.baken.entity.User">
        SELECT id, username, password, email, nickname, avatar, role
        FROM user
        LIMIT #{offset}, #{pageSize}
    </select>


    <!-- 查询总记录数 -->
    <select id="selectTotalCount" resultType="long">
        SELECT COUNT(*) FROM user
    </select>

    <!-- 分页搜索用户 -->
    <select id="searchUsers" resultType="org.example.baken.entity.User">
        SELECT id, username, password, email, nickname, avatar, role
        FROM user
        WHERE username LIKE CONCAT('%', #{query}, '%')
           OR id = #{query}
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 统计搜索结果的记录数 -->
    <select id="countSearchUsers" resultType="long">
        SELECT COUNT(*)
        FROM user
        WHERE username LIKE CONCAT('%', #{query}, '%')
           OR id = #{query}
    </select>
</mapper>